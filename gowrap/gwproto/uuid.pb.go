// Code generated by protoc-gen-go. DO NOT EDIT.
// source: uuid.proto

package gwproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UUID struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *UUID) Reset()                    { *m = UUID{} }
func (m *UUID) String() string            { return proto.CompactTextString(m) }
func (*UUID) ProtoMessage()               {}
func (*UUID) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *UUID) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type NullUUID struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	Valid bool   `protobuf:"varint,2,opt,name=valid" json:"valid,omitempty"`
}

func (m *NullUUID) Reset()                    { *m = NullUUID{} }
func (m *NullUUID) String() string            { return proto.CompactTextString(m) }
func (*NullUUID) ProtoMessage()               {}
func (*NullUUID) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *NullUUID) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *NullUUID) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func init() {
	proto.RegisterType((*UUID)(nil), "fproto_wrap.UUID")
	proto.RegisterType((*NullUUID)(nil), "fproto_wrap.NullUUID")
}

func init() { proto.RegisterFile("uuid.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 145 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x2d, 0xcd, 0x4c,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4e, 0x03, 0xd3, 0xf1, 0xe5, 0x45, 0x89, 0x05,
	0x4a, 0x32, 0x5c, 0x2c, 0xa1, 0xa1, 0x9e, 0x2e, 0x42, 0x22, 0x5c, 0xac, 0x65, 0x89, 0x39, 0xa5,
	0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x10, 0x8e, 0x92, 0x19, 0x17, 0x87, 0x5f, 0x69,
	0x4e, 0x0e, 0x6e, 0x15, 0x50, 0xd1, 0xcc, 0x14, 0x09, 0x26, 0x05, 0x46, 0x0d, 0x8e, 0x20, 0x08,
	0xc7, 0xc9, 0x3c, 0xca, 0x34, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f, 0x57, 0x3f,
	0x28, 0x31, 0x2f, 0x3d, 0x35, 0x27, 0x28, 0x35, 0x31, 0x27, 0x55, 0x1f, 0x62, 0xb7, 0x2e, 0xc8,
	0x6e, 0xdd, 0xe2, 0x92, 0x14, 0xfd, 0xf4, 0x7c, 0x10, 0x53, 0x3f, 0xbd, 0x1c, 0x2c, 0x9e, 0xc4,
	0x06, 0xa6, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd2, 0x5c, 0xad, 0x9f, 0xb0, 0x00, 0x00,
	0x00,
}
